# -*- coding: utf-8 -*-
"""dataset_autorizacion.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1oJ1D-iOl1Pq8piF9QCSfIwqJ1LYMVXN5
"""

# Uso del Pip install para poder importar la librería faker
!pip install faker

# Importar librería pandas para manejar y analizar datos
import pandas as pd
# Importar librería uuid para crear identificadores únicos.
import uuid
# Importar librería random para generar datos aleatorios.
import random
# Importar el paquete faker para generar datos fasos.
from faker import Faker

# Delimitación del rango del número de elementos.
num_autorizacion = 5000

#Instanciación faker
faker = Faker()

# Una lista de 3 características para la entidad configurar
features = [
    "var_descripcion_au",
    "var_status_au",
    "var_id_perm",
    "var_id_rol"
]
# Creación de un DF para estas características
df = pd.DataFrame(columns=features)

# Descripción por cada registro
import string
import random
bio=[]
length_of_string = 20
random.seed()
for i in range(0, num_autorizacion):
  bio=(''.join(random.SystemRandom().choice(string.ascii_letters + string.digits) for i in range(length_of_string)))
  df.var_descripcion_au[i]=bio

# Fk "Id_rol"
def idr_gen(n):
    """
    Función que se encarga de crear un id unico con nomenclatura básica
    ...
    
    Return
    ------
    "ROL "+str(n+1) : str
        id generado con nomenclatura
    """
    return "ROL "+str(n+1) # id para rol

#Generacion de datos en cada atributo
df['var_id_rol'] = [idr_gen(i) for i in range(num_autorizacion)]

# Fk "Id_perm"
def idp_gen(n):
    """
    Función para crear la id única
    ...
    Parametro
    n : int
        corresponde al numero indicador del registro correspondiente 
    
    Return
    ------
    "PERM "+str(n+1) : str
        se crea las identificaciones únicas para los permisos
    """
    return "PERM "+str(n+1)

df['var_id_perm'] = [idp_gen(i) for i in range(num_autorizacion)]

# Estado de autorizacion
Status_au = ["Vigente", "Caducado"]

df['var_status_au']= random.choices(
    Status_au, 
    weights=(45,55), 
    k=num_autorizacion
)
"""
Con la lista generada de las opciones de estados, se proporciona la
función de opciones pesos para cada función y la cantidad de opciones hacer representadas
por "k". Por consiguiente, se asignó al atributo de "var_status_dept" del marco de datos.
"""

# Guardar el conjunto de datos
df.to_csv('dataset_configurar.csv')

# Mostrar el conjunto de datos
pd.read_csv('dataset_configurar.csv', index_col=0)