# -*- coding: utf-8 -*-
"""dataset_misil.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1P7RpV-zBwi4qb79h9Qb4mUK9MPvCETRy
"""

# Uso del Pip install para poder importar la librería faker
!pip install faker

# Importar librería pandas para manejar y analizar datos
import pandas as pd
# Importar librería uuid para crear identificadores únicos.
import uuid
# Importar librería random para generar datos aleatorios.
import random
# Importar el paquete faker para generar datos fasos.
from faker import Faker
# Importar la librería datetime para manejar fechas.
import datetime
from datetime import date

# Delimitación del rango del número de elementos.
num_misil = 5000

#Instanciación del proceso faker
faker = Faker()

# Una lista de 5 características para la entidad misil
atributos = [
    "var_id_mis",
    "var_nombre_mis",
    "var_tipo_mis",
    "dt_fecha_entrega_mis",
    "var_status_mis"  
]

#Lista de nombres para misiles
nombre =[
    "misil-A",
    "misil-B",
    "misil-C",
    "misil-D",
    "misil-E",
    "misil-F"
]

#Lista de tipos de misiles
tipo = [
    "Cinetico",
    "Explosivo",
    "Nuclear"
]

#Lista de estados del misil en cuestión
status = [
    "Listo",
    "En proceso",
    "Incompleto"
]

# Creación de un DF para las 5 características de la entidad misil
df = pd.DataFrame(columns = atributos)

# Generar un identificador para cada misil
def idm_gen(n):
    """
    Función que se encarga de crear un id unico con nomenclatura básica
    ...
    
    Parametros
    ----------
    n : int
        representa el numero de indice correspondiente al registro
    
    Return
    ------
    "MSL--"+str(n+1) : str
        nomenclatura única de identificación del misil correspondiente
    """
    return "MSL "+str(n+1)

df['var_id_mis'] = [idm_gen(i) for i in range(num_misil)]

# Generar un nombre para cada misil
def nombre_gen():
    """
    Función para asignación del nombre del misil
    ...
    
    Return
    ------
    "random.choice(nombre) : str
        De forma aleatoria, se asigna un nombre al misil
    """
    return random.choice(nombre)

df['var_nombre_mis'] = [nombre_gen() for i in range(num_misil)]

# Asignar tipo de misil
def tipo_gen():
    """
    Función que dá el tipo de misil
    ...
    
    Return
    ------
    random.choice(tipo): str
        Selección aleatoria de tipo de misil
    """
    return random.choice(tipo)

df['var_tipo_mis'] = [tipo_gen() for i in range(num_misil)]

# Generar fecha de entrega por cada misil
def fechFab_gen():
    """
    Función para crear fecha de fabricacion
    ...
    
    Return
    ------
    faker.date_between('-3y'): obj datetime.date
        generación de una fecha entre 5 años antes, hastala fecha actual
    """
    return faker.date_between('-3y')

df['dt_fecha_entrega_mis'] = [fechFab_gen() for i in range(num_misil)]

# Determinar el estado de cada misil
def status_gen():
    """
    Función para asignar el estado del misil
    ...
    
    Return
    ------
    random.choice(status) : str
        selección del estado del misil
    """
    return random.choice(status)

df['var_status_mis'] = [status_gen() for i in range(num_misil)]

#Descarga de datos en archivo .cvs
df.to_csv('dataset_misil.csv')

# Mostrar el conjunto de datos
pd.read_csv('dataset_misil.csv', index_col=0)