# -*- coding: utf-8 -*-
"""dataset_items.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/13GEvAQo29_AJIv60wcOrYuApSVIdR7fw
"""

# Uso del Pip install para poder importar la librería faker
!pip install faker

# Importar librería pandas para manejar y analizar datos
import pandas as pd
# Importar librería uuid para crear identificadores únicos.
import uuid
# Importar librería random para generar datos aleatorios.
import random
# Importar el paquete faker para generar datos fasos.
from faker import Faker
# Importar la librería datetime para manejar fechas.
import datetime
from datetime import date

# Delimitación del rango del número de elementos.
num_items = 5000

#Instanciación faker
faker = Faker()

# Una lista de 3 características de la entidad abastecer
features = [
    "var_status_itm",
    "var_id_com",
    "var_id_mis"
]
# Creación de un DF para estas características
df = pd.DataFrame(columns=features)

# Generar Identificadores para cada componente
def idm_gen(n):
    """
    Función que se encarga de crear un id unico con nomenclatura básica
    ...
    
    Parametros
    ----------
    n : int
        representa el numero de indice correspondiente al registro
    
    Return
    ------
    "COMPT "+str(n+1) : str
        nomenclatura única de identificación del misil correspondiente
    """
    return "COMPT "+str(n+1)

df['var_id_com'] = [idm_gen(i) for i in range(num_items)]

# Generar un identificador para cada misil
def idm_gen(n):
    """
    Función que se encarga de crear un id unico con nomenclatura básica
    ...
    
    Parametros
    ----------
    n : int
        representa el numero de indice correspondiente al registro
    
    Return
    ------
    "MSL--"+str(n+1) : str
        nomenclatura única de identificación del misil correspondiente
    """
    return "MSL "+str(n+1)

df['var_id_mis'] = [idm_gen(i) for i in range(num_items)]

# Estado del departamento
Status_itm = ["Ensamblado", "No Ensamblado"]

df['var_status_itm']= random.choices(
    Status_itm, 
    weights=(45,55), 
    k=num_items
)
"""
Con la lista generada de las opciones de estados, se proporciona la
función de opciones pesos para cada función y la cantidad de opciones hacer representadas
por "k". Por consiguiente, se asignó al atributo de "var_status_dept" del marco de datos.
"""

# Guardar el conjunto de datos
df.to_csv('dataset_items.csv')

# Mostrar el conjunto de datos
pd.read_csv('dataset_items.csv', index_col=0)